{"version":3,"sources":["scripts/main.js"],"names":["tableHeader","document","querySelector","headers","childNodes","filter","node","nodeType","Node","ELEMENT_NODE","sortTableColumn","type","tableColumn","sort","a","b","localeCompare","Number","slice","split","join","Error","forEach","header","addEventListener","currEvent","columnNumber","tableHeaderLen","children","length","i","srcElement","tableBody","currentColumn","map","tr","textContent","index"],"mappings":";AAAA,aAqBA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAnBA,IAAMA,EAAcC,SAASC,cAAc,SACrCC,EAAU,EAAIH,EAAYI,WAAW,GAAGA,YAC3CC,OAAO,SAAAC,GAAQA,OAAAA,EAAKC,WAAaC,KAAKC,eAEzC,SAASC,EAAgBC,EAAMC,GACrBD,OAAAA,GACD,IAAA,OACA,IAAA,WACIC,OAAAA,EAAYC,KAAK,SAACC,EAAGC,GAAMD,OAAAA,EAAEE,cAAcD,KAC/C,IAAA,MACIH,OAAAA,EAAYC,KAAK,SAACC,EAAGC,GAAME,OAAAA,OAAOH,GAAKG,OAAOF,KAClD,IAAA,SACIH,OAAAA,EAAYC,KAAK,SAACC,EAAGC,GAAM,OAACD,EAAEI,MAAM,GAAGC,MAAM,KAAKC,KAAK,IAC1DL,EAAEG,MAAM,GAAGC,MAAM,KAAKC,KAAK,MACjC,QACQ,MAAA,IAAIC,MAAM,iDAItBlB,EAAQmB,QAAQ,SAAAC,GACdA,EAAOC,iBAAiB,QAAS,SAACC,GAI3B,IAHDC,IAAAA,EAAe,EACbC,EAAiB3B,EAAY4B,SAAS,GAAGA,SAASC,OAE/CC,EAAI,EAAGA,EAAIH,EAAgBG,IAC9B9B,EAAY4B,SAAS,GAAGA,SAASE,KAAOL,EAAUM,aACpDL,EAAeI,GAIbE,IAAAA,EAAY/B,SAASC,cAAc,SACnC+B,EAAgB,EAAID,EAAUJ,UACjCM,IAAI,SAAAC,GAAMA,OAAAA,EAAGP,SAASF,GAAcU,cAEvC1B,EAAgBe,EAAUM,WAAWK,YAAaH,GAE9CD,EAAAA,EAAUJ,UAAUN,QAAQ,SAACa,EAAIE,GACnCF,EAAGP,SAASF,GAAcU,YAAcH,EAAcI","file":"main.cf933e43.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst tableHeader = document.querySelector('thead');\nconst headers = [...tableHeader.childNodes[1].childNodes]\n  .filter(node => node.nodeType === Node.ELEMENT_NODE);\n\nfunction sortTableColumn(type, tableColumn) {\n  switch (type) {\n    case 'Name':\n    case 'Position':\n      return tableColumn.sort((a, b) => a.localeCompare(b));\n    case 'Age':\n      return tableColumn.sort((a, b) => Number(a) - Number(b));\n    case 'Salary':\n      return tableColumn.sort((a, b) => +a.slice(1).split(',').join('')\n        - b.slice(1).split(',').join(''));\n    default:\n      throw new Error('there is no such column name in given table.');\n  }\n}\n\nheaders.forEach(header => {\n  header.addEventListener('click', (currEvent) => {\n    let columnNumber = 0;\n    const tableHeaderLen = tableHeader.children[0].children.length;\n\n    for (let i = 0; i < tableHeaderLen; i++) {\n      if (tableHeader.children[0].children[i] === currEvent.srcElement) {\n        columnNumber = i;\n      }\n    }\n\n    const tableBody = document.querySelector('tbody');\n    const currentColumn = [...tableBody.children]\n      .map(tr => tr.children[columnNumber].textContent);\n\n    sortTableColumn(currEvent.srcElement.textContent, currentColumn);\n\n    [...tableBody.children].forEach((tr, index) => {\n      tr.children[columnNumber].textContent = currentColumn[index];\n    });\n  });\n});\n"]}